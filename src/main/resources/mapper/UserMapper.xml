<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="main.biggreenbook.entity.dao.UserMapper">

    <select id="getUserByUid" parameterType="java.lang.String" resultType="main.biggreenbook.entity.pojo.User">
        select *
        from user
        where uid = #{uid}
    </select>

    <resultMap id="userCardMap" type="main.biggreenbook.entity.vo.UserCard">
        <id property="userUid" column="uid"/>
        <result property="userNickname" column="nickname"/>
        <result property="userAvatarPath" column="avatar_path"/>
        <result property="contentAmount" column="contentAmount"/>
        <result property="fansAmount" column="fansAmount"/>
        <association property="status" column="uid" javaType="int" select="getStatus"></association>
    </resultMap>

    <!--获取用户数量（含搜索）-->
    <select id="getQueryId" resultType="java.lang.Integer">
        select count(*)
        from `user`
        <if test="search != null and search != ''">
            where `user`.`nickname` like '%${search}%'
        </if>
    </select>

    <!--获取用户（含搜索）-->
    <select id="getUserBySearch" resultMap="userCardMap" parameterType="main.biggreenbook.entity.vo.Example">
        select `user`.`uid` as uid,
        `user`.`nickname` as nickname,
        `user`.`avatar_path` as avatar_path,
        count(`collection`.`uid`) as contentAmount,
        count(`follow`.`uid`) as fansAmount
        from `user`
        left join `collection` on `collection`.`uid` = `user`.uid
        left join `follow` on `follow`.`uid` = `user`.`uid`
        <if test="example.search != null and example.search != ''">
            where `user`.`nickname` like '%${example.search}%'
        </if>
        group by `user`.`uid`
        <choose>
            <when test="example.sort == null or example.sort == ''">
                order by `user`.`nickname` asc limit ${pageSize*pageNum}, #{pageSize}
            </when>
            <when test="example.sort == 'FANS' and pageNum == 0">
                order by fansAmount desc limit 0,#{example.amount}
            </when>
            <when test="example.sort == 'FANS' and pageNum != 0">
                order by fansAmount asc limit ${pageSize*pageNum}, #{pageSize}
            </when>
        </choose>
    </select>

    <!--本人是否关注该用户-->
    <select id="getStatus" resultType="int">
        select count(`follow`.`uid`) as status
        from `follow`
        where `follow`.`uid` = ${uid}
          and `follow`.`follower` = ${follower}
    </select>

</mapper>
