<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="main.biggreenbook.entity.dao.UserMapper">

    <insert id="addFollow">
        insert into `follow`
        values (#{goal}, #{me}, #{date})
    </insert>

    <delete id="deleteFollow">
        delete
        from `follow`
        where `uid` = #{goal}
          and `follower` = #{me}
    </delete>

    <select id="getUserByUid" parameterType="java.lang.String" resultType="main.biggreenbook.entity.pojo.User">
        select *
        from user
        where uid = #{uid}
    </select>

    <resultMap id="userCardMap" type="main.biggreenbook.entity.vo.UserCard">
        <id property="userUid" column="uid"/>
        <result property="userNickname" column="nickname"/>
        <result property="userAvatarPath" column="avatar_path"/>
        <result property="contentAmount" column="contentAmount"/>
        <result property="fansAmount" column="fansAmount"/>
        <result property="status" column="status"/>
    </resultMap>

    <!--获取用户数量（含搜索）-->
    <select id="getQueryId" resultType="java.lang.Integer">
        select count(*)
        from `user`
        <if test="search != null and search != ''">
            where `user`.`nickname` like '%${search}%'
        </if>
    </select>

    <!--获取用户卡片-->
    <select id="getUserCardBySearch" resultMap="userCardMap" resultType="map">
        select `tmp`.`uid` as uid,
        `tmp`.`nickname` as nickname,
        `tmp`.`avatar_path` as avatar_path,
        `tmp`.`contentAmount` as contentAmount,
        `tmp`.`fansAmount` as fansAmount,
        count(`follow`.`uid`) as status
        FROM(select `tmp1`.`uid` as uid,
        `tmp1`.`nickname` as nickname,
        `tmp1`.`avatar_path` as avatar_path,
        `tmp1`.`contentAmount` as contentAmount,
        count(`follow`.`uid`) as fansAmount
        from (select `user`.`uid` as uid,
        `user`.`nickname` as nickname,
        `user`.`avatar_path` as avatar_path,
        count(`content`.`uid`) as contentAmount
        from `user`
        left join `content` on `user`.uid = `content`.`uid`
        <if test="search != null and search != ''">
            where `user`.`nickname` like '%${search}%'
        </if>
        group by `user`.`uid`)tmp1
        LEFT JOIN `follow` ON `follow`.`uid` = `tmp1`.uid
        GROUP BY `tmp1`.uid)tmp
        LEFT JOIN `follow` on `follow`.`uid` = `tmp`.`uid` and `follow`.`follower` = #{follower}
        group by `tmp`.`uid`
        <choose>
            <when test="sort == null or sort == ''">
                <choose>
                    <when test="pageNum == 0 and amount != pageSize">
                        order by nickname desc limit 0, #{amount}
                    </when>
                    <when test="amount == pageSize">
                        order by nickname asc limit ${pageSize*pageNum}, #{pageSize}
                    </when>
                </choose>
            </when>
            <when test="sort == 'FANS'">
                <choose>
                    <when test="pageNum == 0 and amount != pageSize">
                        order by fansAmount desc limit 0,#{amount}
                    </when>
                    <when test="amount == pageSize">
                        order by fansAmount asc limit ${pageSize*pageNum}, #{pageSize}
                    </when>
                </choose>
            </when>
        </choose>
    </select>

    <select id="getFollowStateBetween" resultType="java.lang.Integer">
        select count(*)
        from `follow`
        where `uid` = #{uid}
          and `follower` = #{follower}
    </select>

    <select id="getUserPrivacy" resultType="main.biggreenbook.entity.pojo.UserPrivacy">
        select *
        from user_privacy
        where uid = #{uid}
    </select>

    <select id="getFollowersUid" resultType="java.lang.String">
        select follower
        from follow
        where uid = #{uid}
        limit ${pageNum*pageSize},${pageSize}
    </select>

    <select id="getUserFollowersAmount" resultType="java.lang.Integer">
        select count(follower)
        from follow
        where uid = #{uid}
    </select>

    <select id="getFollowingsUid" resultType="java.lang.String">
        select uid
        from follow
        where follower = #{uid}
    </select>

    <select id="getUserFollowingsAmount" resultType="java.lang.Integer">
        select count(uid)
        from follow
        where follower = #{uid}
    </select>

    <!--添加用户-->
    <insert id="addUser">
        insert into `user`
        values (#{user.uid}, #{user.nickname}, #{user.description}, #{user.gender}, #{user.birthday}, 0,
                #{user.avatarPath})
    </insert>

    <insert id="insertDefaultUserPrivacy">
        insert into `user_privacy`
        values (#{uid}, 0, 0)
    </insert>

    <!--修改用户信息-->
    <update id="updateUser">
        update `user`
        set `nickname`=#{user.nickname},
            `description`=#{user.description},
            `gender`=#{user.gender},
            `birthday`=#{user.birthday},
            `avatar_path`=#{user.avatarPath}
        where uid = #{user.uid}
    </update>

    <update id="updateUserPrivacy" parameterType="main.biggreenbook.entity.pojo.UserPrivacy">
        update `user_privacy`
        set `public_collection`=#{new_privacy.publicCollection},
            `public_liked`     = #{new_privacy.publicLiked}
        where `uid` = #{new_privacy.uid}
    </update>

</mapper>
